webpackJsonp([0],[
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var listen = function listen(elems, event, f) {
  if ((typeof elems === "undefined" ? "undefined" : _typeof(elems)) === "object" && elems.length > 1) {
    elems.forEach(function (item) {
      return item.addEventListener(event, f, false);
    });
  } else {
    elems.addEventListener(event, f, false);
  }
};
var test = function test(s) {
  return s + 2;
};
exports.default = { listen: listen };

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(2);


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(3);

var _header = __webpack_require__(4);

var _header2 = _interopRequireDefault(_header);

var _feature = __webpack_require__(5);

var _feature2 = _interopRequireDefault(_feature);

var _interface = __webpack_require__(6);

var _interface2 = _interopRequireDefault(_interface);

var _reviews = __webpack_require__(7);

var _reviews2 = _interopRequireDefault(_reviews);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 3 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _helpers = __webpack_require__(0);

var _helpers2 = _interopRequireDefault(_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// ==== elements ====

var nav = document.querySelector('.nav'),
    navBurg = document.querySelector('.nav-left-burg'),
    navDrop = document.querySelector('.nav_drop'),
    closeNavDrop = document.querySelector('.nav_drop-exit');

// ==== functions ====
var navChange = function navChange(scrollTop) {
    var isWhite = scrollTop >= 7;
    nav.className = isWhite ? 'nav nav-scroled' : 'nav';
};
var toggleNavDrop = function toggleNavDrop(e) {
    var toShow = e.target === navBurg ? true : false;
    navDrop.className = toShow ? 'nav_drop nav_drop-active' : 'nav_drop';
};
// ==== listeners ====
_helpers2.default.listen(window, 'scroll', function (e) {
    return navChange(document.documentElement.scrollTop);
});
_helpers2.default.listen(navBurg, 'click', function (e) {
    return console.log('click');
});
_helpers2.default.listen(navBurg, 'click', toggleNavDrop);
_helpers2.default.listen(closeNavDrop, 'click', toggleNavDrop);

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _helpers = __webpack_require__(0);

var _helpers2 = _interopRequireDefault(_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// elements
var phone = document.querySelector('.features_center-left'),
    mapIco = document.querySelector('.features_bottom-rigth');
// functions
var animatePhoneAndMap = function animatePhoneAndMap(scrollTop, elements) {
    elements.forEach(function (item) {
        var isAnimate = scrollTop >= item.parentNode.offsetTop - 600;
        item.style.transform = isAnimate ? 'translateX(0)' : window.getComputedStyle(item);
    });
};
// ==== listeners ====
_helpers2.default.listen(window, 'scroll', function (e) {
    return animatePhoneAndMap(document.documentElement.scrollTop, [phone, mapIco]);
});

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _helpers = __webpack_require__(0);

var _helpers2 = _interopRequireDefault(_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// ==== elements ====
var view = document.querySelector('.reviews-view'),
    rotateWidth = view.offsetWidth,
    slider = document.querySelector('.slider'),
    sliderItem = document.querySelectorAll('.slider-item'),
    startTranslate = window.getComputedStyle(slider).transform,
    controlTabs = document.querySelectorAll('.reviews-view-control_tabs-item'),
    prevBtn = document.querySelector('.reviews-prevBtn'),
    nextBtn = document.querySelector('.reviews-nextBtn ');
// ==== functions ====
var rotate = function rotate(startPage) {
    var page = startPage;
    var isAvaiaibleRotate = function isAvaiaibleRotate(type) {
        if (type === 'next' && page < sliderItem.length) {
            return true;
        } else if (type === 'prev' && page > 1) {
            return true;
        } else {
            page = startPage;
            return false;
        }
    };
    var activeTab = function activeTab() {
        controlTabs.forEach(function (item, id) {
            if (id + 1 === page) {
                item.className = 'reviews-view-control_tabs-item reviews-view-control_tabs-item-active';
            } else {
                item.className = 'reviews-view-control_tabs-item';
            }
        });
    };
    return {
        nextPage: function nextPage() {
            var toRotate = isAvaiaibleRotate('next') && page++;
            var factor = page - 1;
            activeTab();
            slider.style.transform = toRotate ? 'translateX(-' + rotateWidth * factor + 'px)' : startTranslate;
        },
        prevPage: function prevPage() {
            var toRotate = isAvaiaibleRotate('prev') && page--;
            var factor = page - 1;
            activeTab();
            slider.style.transform = toRotate ? 'translateX(-' + rotateWidth * factor + 'px)' : startTranslate;
        },
        toNeedPage: function toNeedPage(id) {
            page = parseInt(id);
            var factor = page - 1;
            activeTab();
            slider.style.transform = 'translateX(-' + rotateWidth * factor + 'px)';
        }
    };
};
var sliderRotate = rotate(1);
// ==== listeners ====
_helpers2.default.listen(prevBtn, 'click', function (e) {
    return sliderRotate.prevPage();
});
_helpers2.default.listen(nextBtn, 'click', function (e) {
    return sliderRotate.nextPage();
});
_helpers2.default.listen(controlTabs, 'click', function (e) {
    var id = e.target.getAttribute('data-slider-id');
    sliderRotate.toNeedPage(id);
});

/***/ })
],[1]);